# [[ repo_managed ]]
name: Release

on:
  workflow_dispatch:
  workflow_call:
    outputs:
      new-release-published:
        description: "Whether or not a new release was published."
        value: ${{ jobs.build.outputs.new-release-published }}
      release-version:
        description: "The version string of the newly published release"
        value: ${{ jobs.build.outputs.release-version }}
  push:
    branches:
      - [[ repo.github.default_branch ]]

permissions:
  contents: write
  issues: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      new-release-published: ${{ steps.semantic-release.outputs.new-release-published }}
      release-version: ${{ steps.semantic-release.outputs.release-version }}

    steps:
    - name: GitHub Environment Variables Action
      uses: FranzDiebold/github-env-vars-action@v2

    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        # moby/buildkit v0.11.0 causes untagged images to appear in github
        # packages and the workaround does not seem to have any effect
        # (set provenance=false in docker/build-push-action@v4)
        driver-opts: network=host,image=moby/buildkit:v0.10.5

    - name: Create release
      id: semantic-release
      uses: codfish/semantic-release-action@v3
      with:
        # support releasing the "main" branch
        # whilst preserving the action defaults
        branches: |
          [
            '+([0-9])?(.{+([0-9]),x}).x',
            '[[ repo.github.default_branch ]]',
            'next',
            'next-major',
            {
              name: 'beta',
              prerelease: true
            },
            {
              name: 'alpha',
              prerelease: true
            }
          ]
        additional-packages: |
          ['@semantic-release/changelog', '@semantic-release/git', '@semantic-release/exec']
        repository-url: 'https://github.com/${{ github.repository_owner }}/${{ env.CI_REPOSITORY_NAME }}.git'
        tag-format: 'v${version}'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ghcr.io/${{ github.repository_owner }}/${{ env.CI_REPOSITORY_NAME }}
        tags: |
          type=sha
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value=${{ steps.semantic-release.outputs.release-version }}

    - name: Login to Container Registry ghcr.io
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        provenance: false
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-to: type=gha
        cache-from: type=gha
        build-args: |
          PACKAGIST_USER=token
          PACKAGIST_TOKEN=${{ secrets.PACKAGIST_TOKEN }}
{% if workflow_group in followup_workflows %}
{% for followup_workflow in followup_workflows[workflow_group] %}

  [[ followup_workflow.name ]]-followup:
    needs: build
    secrets: inherit
    uses: ./[[ followup_workflow.path_from_root ]]
{% endfor %}
{% endif %}
